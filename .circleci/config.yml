version: 2
jobs:
  node:
    working_directory: ~/demo-react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            npm run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/demo-react-native
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android-alpha:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: 
          name: install bundler
          command: |
            gem update --system
            gem install bundler
            bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android alpha
          command: |
            bundle exec fastlane alpha

  android-beta:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: 
          name: install bundler
          command: |
            gem update --system
            gem install bundler
            bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android beta
          command: |
            bundle exec fastlane beta
      # - store_artifacts:
      #     path: test-results

  ios-beta:
    macos:
      xcode: "9.0"
    working_directory: ~/demo-react-native

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: node-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: |
            gem update --system
            gem install bundler
            bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane beta
          working_directory: ios

      # - store_artifacts:
      #     path: ios/test-results

  ios-prod:
    macos:
      xcode: "9.0"
    working_directory: ~/demo-react-native

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: node-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          name: install bundler
          command: |
            gem update --system
            gem install bundler
            bundle install          
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane prod
          working_directory: ios

workflows:
  version: 2
  node-android-ios:
    jobs:
      - android-hold:
          type: approval
      - ios-hold:
          type: approval
      - node
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/
      - android-alpha:
          requires:
            - node
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/
      - android-beta:
          requires:
            - android-hold
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/
      - ios-beta:
          requires:
            - node
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/
      - ios-prod:
          requires:
            - ios-hold
          # filters:
          #   tags:
          #     only: /^v.*/
          #   branches:
          #     ignore: /.*/